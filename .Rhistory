head(address_data)
pop2$pct_under18 <- round((pop2$under18 / pop2$totpop) * 100, 1)
address_data2 <- merge(address_data, pop2, by="GEOID10", all.x=T)
# Take a look - what do you think?
head(address_data2)
head(address_data)
pop2$pct_under18 <- round((pop2$under18 / pop2$totpop) * 100, 1)
address_data2 <- merge(address_data, pop2, by="GEOID10", all.x=T)
# Take a look - what do you think?
head(address_data2)
tracts2010 <- merge(tracts2010, pop2, by="GEOID10")
quantColors <- colorQuantile("Reds", tracts2010$pct_under18, n=5)
point_map <- leaflet() %>%
addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor= ~quantColors(pct_under18),
fillOpacity = 0.75,
popup = paste0("<b>Percent under 18:</b> ", tracts2010$pct_under18, "%")) %>%
addMarkers(data=address_data, lat=~glat, lng=~glon,
popup=(paste0(address_data$name, "</br>",
address_data$full_address)
)
)
point_map
library(crosstalk)
address_data2$sview <- paste0("http://maps.googleapis.com/maps/api/streetview?size=250x190&location=",address_data2$glat,",",address_data2$glon,"&sensor=false&fov=110")
address_data2$popup_content <- paste("<b>Name:</b>", address_data2$name,"<br>",
"<b>Address</b>: ", address_data2$full_address, "<br>",
"<b>Percent Under 18:</b> ", address_data2$pct_under18, "<br>",
"<img src=", address_data2$sview,"></img>"
)
shared_df <- SharedData$new(address_data2, ~name, group = "Choose Store")
quantColors <- colorQuantile("YlOrRd", tracts2010$pct_under18, n=5)
map <- leaflet(shared_df, width = "100%", height = 600) %>% addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor=~quantColors(pct_under18),
fillOpacity = 0.65,
popup = paste0(tracts2010$pct_under18, "% under 18"),
group="Percent Under 18") %>%
addMarkers(group="Liquor Stores", popup=~popup_content) %>%
addLayersControl(
overlayGroups = c("Liquor Stores","Percent Under 18"),
options = layersControlOptions(collapsed = FALSE)
)
library(ggmap)
setwd("~/Documents/Dlab/workshops/2018/RGeocoding")
#mykey <- "AIzaSyxxxxxxxxxxxxxxxxxxxxxxxxxOQyOFWrTw"
mykey <- "AIzaSyDf-SZG8O4hj1c06VQ-k6hkBrOQyOFWrTw"
register_google(key=mykey)
# File of addresses
address_data <- read.csv("address_data/oak_liquor_stores.csv", stringsAsFactors = F)
# Take a look
head(address_data)
# Full addres format: "2625 Dana St, Berkeley CA, 94704"
address_data$full_address <- paste0(address_data$street, ", " ,
address_data$city, ", " ,
address_data$state, " ",
address_data$zip)
# Take a look
head(address_data, 3)
head(google_geocoded)
source("./scripts/fcc_latlon2fips.R")
# test one coordinate pair
latlon2fips(latitude=37.852562, longitude=-122.273634)
View(pop_acs5_2016)
write.csv(address_data2, file="address_data_geocoded2.csv", row.names=F)
writeOGR(tracts2010, "tracts2010.shp")
write.csv(address_data2, file="address_data_geocoded2.csv", row.names=F)
writeOGR(tracts2010, "tracts2010.shp", driver="ESRI Shapefile")
write.csv(address_data2, file="address_data_geocoded2.csv", row.names=F)
writeOGR(tracts2010, layer="tracts2010", driver="ESRI Shapefile")
write.csv(address_data2, file="address_data_geocoded2.csv", row.names=F)
writeOGR(tracts2010, dsn=".", layer="tracts2010", driver="ESRI Shapefile")
address_data2 < read.csv("address_data_geocoded2.csv", stringsAsFactors = F)
address_data2 < read.csv("address_data_geocoded2.csv", stringsAsFactors = F)
address_data2 <- read.csv("address_data_geocoded2.csv", stringsAsFactors = F)
address_data2 <- read.csv("address_data_geocoded2.csv", stringsAsFactors = F)
tracts2010 <- readOGR(dsn=".",layer="tracts2010")
address_data2 <- read.csv("address_data_geocoded2.csv", stringsAsFactors = F)
tracts2010 <- readOGR(dsn=".",layer="tracts2010")
address_data2$sview <- paste0("http://maps.googleapis.com/maps/api/streetview?size=250x190&location=",address_data2$glat,",",address_data2$glon,"&sensor=false&fov=110")
address_data2$popup_content <- paste("<b>Name:</b>", address_data2$name,"<br>",
"<b>Address</b>: ", address_data2$full_address, "<br>",
"<b>Percent Under 18:</b> ", address_data2$pct_under18, "<br>",
"<img src=", address_data2$sview,"></img>"
)
shared_df <- SharedData$new(address_data2, ~name, group = "Choose Store")
quantColors <- colorQuantile("YlOrRd", tracts2010$pct_under18, n=5)
map <- leaflet(shared_df, width = "100%", height = 600) %>% addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor=~quantColors(pct_under18),
fillOpacity = 0.65,
popup = paste0(tracts2010$pct_under18, "% under 18"),
group="Percent Under 18") %>%
addMarkers(group="Liquor Stores", popup=~popup_content) %>%
addLayersControl(
overlayGroups = c("Liquor Stores","Percent Under 18"),
options = layersControlOptions(collapsed = FALSE)
map <- leaflet(shared_df, width = "100%", height = 600) %>% addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor=~quantColors(pct_under18),
fillOpacity = 0.65,
popup = paste0(tracts2010$pct_under18, "% under 18"),
group="Percent Under 18") %>%
addMarkers(group="Liquor Stores", popup=~popup_content) %>%
addLayersControl(
overlayGroups = c("Liquor Stores","Percent Under 18"),
options = layersControlOptions(collapsed = FALSE)
)
View(tracts2010)
shared_df <- SharedData$new(address_data2, ~name, group = "Choose Store")
quantColors <- colorQuantile("YlOrRd", tracts2010$pct_n18, n=5)
map <- leaflet(shared_df, width = "100%", height = 600) %>% addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor=~quantColors(pct_n18),
fillOpacity = 0.65,
popup = paste0(tracts2010$pct_n18, "% under 18"),
group="Percent Under 18") %>%
addMarkers(group="Liquor Stores", popup=~popup_content) %>%
addLayersControl(
overlayGroups = c("Liquor Stores","Percent Under 18"),
options = layersControlOptions(collapsed = FALSE)
)
bscols( widths = c(9,3),
map,
list(
filter_select("name", "Store:", shared_df, ~name),
filter_select("pct_under18", "Percent under 18", shared_df, ~pct_under18)
)
)
getwd()
write.csv(google_geocoded,file="output/address_data_geocoded_google.csv",
row.names=FALSE)
write.csv(esri_geocoded,file="output/address_data_geocoded_esri.csv",
row.names=FALSE)
write.csv(address_data2, file="output/address_data_geocoded2.csv", row.names=F)
writeOGR(tracts2010, dsn="./output", layer="tracts2010", driver="ESRI Shapefile")
library(crosstalk)
library(tidyverse)
library(leaflet)
library(rgdal)
library(sp)
#library(DT)
address_data2 <- read.csv("output/address_data_geocoded2.csv" )
=tracts2010 <- readOGR(dsn="./output",layer="tracts2010")
shared_df <- SharedData$new(address_data2, ~name, group = "Choose Store")
quantColors <- colorQuantile("YlOrRd", tracts2010$pct_n18, n=5)
map <- leaflet(shared_df, width = "100%", height = 600) %>% addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor=~quantColors(pct_n18),
fillOpacity = 0.65,
popup = paste0(tracts2010$pct_n18, "% under 18"),
group="Percent Under 18") %>%
addMarkers(group="Liquor Stores", popup=~popup_content) %>%
addLayersControl(
overlayGroups = c("Liquor Stores","Percent Under 18"),
options = layersControlOptions(collapsed = FALSE)
)
library(crosstalk)
library(tidyverse)
library(leaflet)
library(rgdal)
library(sp)
#library(DT)
address_data2 <- read.csv("output/address_data_geocoded2.csv", stringsAsFactors = F)
=tracts2010 <- readOGR(dsn="./output",layer="tracts2010")
setwd("~/Documents/Dlab/workshops/2018/RGeocoding")
library(crosstalk)
library(tidyverse)
library(leaflet)
library(rgdal)
library(sp)
#library(DT)
address_data2 <- read.csv("output/address_data_geocoded2.csv", stringsAsFactors = F)
=tracts2010 <- readOGR(dsn="output",layer="tracts2010")
library(crosstalk)
library(tidyverse)
library(leaflet)
library(rgdal)
library(sp)
#library(DT)
address_data2 <- read.csv("output/address_data_geocoded2.csv", stringsAsFactors = F)
tracts2010 <- readOGR(dsn="output",layer="tracts2010")
shared_df <- SharedData$new(address_data2, ~name, group = "Choose Store")
quantColors <- colorQuantile("YlOrRd", tracts2010$pct_n18, n=5)
map <- leaflet(shared_df, width = "100%", height = 600) %>% addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor=~quantColors(pct_n18),
fillOpacity = 0.65,
popup = paste0(tracts2010$pct_n18, "% under 18"),
group="Percent Under 18") %>%
addMarkers(group="Liquor Stores", popup=~popup_content) %>%
addLayersControl(
overlayGroups = c("Liquor Stores","Percent Under 18"),
options = layersControlOptions(collapsed = FALSE)
)
shared_df <- SharedData$new(address_data2, ~name, group = "Choose Store")
quantColors <- colorQuantile("YlOrRd", tracts2010$pct_n18, n=5)
map <- leaflet(shared_df, width = "100%", height = 600) %>% addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor=~quantColors(pct_n18),
fillOpacity = 0.65,
popup = paste0(tracts2010$pct_n18, "% under 18"),
group="Percent Under 18") %>%
addMarkers(group="Liquor Stores") %>%
addLayersControl(
overlayGroups = c("Liquor Stores","Percent Under 18"),
options = layersControlOptions(collapsed = FALSE)
)
bscols( widths = c(9,3),
map,
list(
filter_select("name", "Store:", shared_df, ~name),
# Create a filter input
filter_slider("pct_under18", "Percent under 18", shared_df, column=~pct_under18, step=0.5, width=250)
)
)
bscols( widths = c(9,3),
map,
list(
filter_select("name", "Store:", shared_df, ~name),
# Create a filter input
filter_slider("pct_under18", "Percent under 18", shared_df, column=~pct_under18, step=0.15, width=250)
)
)
bscols( widths = c(9,3),
map,
list(
filter_select("name", "Store:", shared_df, ~name),
# Create a filter input
filter_slider("pct_under18", "Percent under 18", shared_df, column=~pct_under18, step=0.1, width=250)
)
)
shared_df <- SharedData$new(address_data2, ~name, group = "Choose Store")
quantColors <- colorQuantile("YlOrRd", tracts2010$pct_n18, n=5)
map <- leaflet(shared_df, width = "100%", height = 600) %>% addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor=~quantColors(pct_n18),
fillOpacity = 0.65,
popup = paste0(tracts2010$pct_n18, "% under 18"),
group="Percent Under 18") %>%
addMarkers(group="Liquor Stores", popup=shared_df$pct_under18) %>%
addLayersControl(
overlayGroups = c("Liquor Stores","Percent Under 18"),
options = layersControlOptions(collapsed = FALSE)
)
bscols( widths = c(9,3),
map,
list(
filter_select("name", "Store:", shared_df, ~name),
# Create a filter input
filter_slider("pct_under18", "Percent under 18", shared_df, column=~pct_under18, step=0.1, width=250)
)
)
setwd("~/Documents/Dlab/workshops/2018/RGeocoding")
library(ggmap)
mykey <- "AIzaSyDf-SZG8O4hj1c06VQ-k6hkBrOQyOFWrTw"
register_google(key=mykey)
geocode("San Francisco, CA", key=mykey)
geocode
?geocode
geocode("San Francisco, CA")
geocode("San Francisco, CA", "more")
x<-geocode("San Francisco, CA", "more")
View(x)
x<-geocode("Barrows Hall, Berkeley", "more")
View(x)
x<-geocode("2465 Dana St, Berkeley", "more")
x<-geocode("2465 Dana St, Berkeley", "all")
revgeocode(c(-122.4194,37.77493), output="more")
# File of addresses
address_data <- read.csv("address_data/oak_liquor_stores.csv", stringsAsFactors = F)
# Take a look
head(address_data)
address_data$full_address <- paste0(address_data$street, ", " ,
address_data$city, ", " ,
address_data$state, " ",
address_data$zip)
# File of addresses
address_data <- read.csv("address_data/oak_liquor_stores.csv", stringsAsFactors = F)
# Take a look
head(address_data)
View(address_data)
address_data$full_address <- paste0(address_data$street, ", " ,
address_data$city, ", " ,
address_data$state, " ",
address_data$zip)
View(address_data)
google_geocoded <- geocode(address_data$full_address, output = "more",
source = "google", key=mykey)
View(google_geocoded)
address_data$glat <- google_geocoded$lat
address_data$glon <- google_geocoded$glon
address_data$glon <- google_geocoded$glon
View(address_data)
head(address_data)
address_data$glon <- google_geocoded$lon
library(leaflet)
point_map <- leaflet(address_data) %>%
addTiles() %>%
addMarkers(lat=~glat, lng=~glon,
popup=(paste0(address_data$name, "</br>",
address_data$full_address)
)
)
point_map
esri_token<-"rfUfTu_yJczZESOq6S50x-kcrzFr9oBvpqhRpp70Pfu_P9uNjMgNtVXGq0iH6miRPGL6yoQMg2IlNROHzErtjCeHphbAfkETqS_Ksd5loXT1BGmU0U1wI5KtKxvfVxjaxWG3AIre2Ngf_NQ9XlDB5w.."
my_esri_token<-"rfUfTu_yJczZESOq6S50x-kcrzFr9oBvpqhRpp70Pfu_P9uNjMgNtVXGq0iH6miRPGL6yoQMg2IlNROHzErtjCeHphbAfkETqS_Ksd5loXT1BGmU0U1wI5KtKxvfVxjaxWG3AIre2Ngf_NQ9XlDB5w.."
source("./scripts/esri_wgs_geocoding.R")
geocode_one("2625 Dana St, Berkeley, CA, 94704", my_esri_token,
postal = TRUE)
esri_geocoded <- geocode_many(address_data$id, address_data$street,
address_data$city, address_data$state,
as.character(address_data$zip), my_esri_token)
View(esri_geocoded)
address_data <- merge(address_data, esri_geocoded[c("ID","lon","lat")],
by.x="id",by.y = "ID", all.x = T)
# Take a look
head(address_data, 3)
View(address_data)
point_map <- leaflet() %>%
addTiles() %>%
addMarkers(lat=address_data$glat, lng=address_data$glon,
popup=(paste0(address_data$name, "</br>",
address_data$full_address))
) %>%
addCircleMarkers(lat=address_data$lat, lng=address_data$lon,
color="black",fillColor="red",
popup=(paste0(address_data$name, "</br>",
address_data$full_address))
)
point_map
source("./scripts/fcc_latlon2fips.R")
latlon2fips(latitude=37.852562, longitude=-122.273634)
x<- latlon2fips(latitude=37.852562, longitude=-122.273634)
x
substr(x,0,11)
x<- latlon2fips(37.852562,-122.273634)
x
address_data$fips<- mapply(latlon2fips, address_data$glat,
address_data$glon)
head(address_data, 3)
View(address_data)
library(sp)
library(tigris)
options(tigris_class = "sp")   # options are sp or sf
options(tigris_use_cache = F)  # set to true to save locally
tracts2010 <- tracts(state = '06', county= '001', cb = F, year=2010)
plot(tracts2010)
tracts2010cb <- tracts(state = '06', county= '001', cb = T, year=2010)
plot(tracts2010cb)
plot(tracts2010)
plot(tracts2010)
address_data_sp<- address_data  #make copy
coordinates(address_data_sp) <-c("glon", "glat")
proj4string(address_data_sp) <- CRS(proj4string(tracts2010))
proj4string(address_data_sp) <- CRS(proj4string(tracts2010))
points(address_data_sp, col="red")
fips2010 <-over(address_data_sp, tracts2010)
View(fips2010)
address_data$GEOID10 <- fips2010$GEOID10
View(address_data)
library(tidycensus)
library(tigris)
library(tidycensus)
my_census_api_key <- "f2d6f4f743545d3a42a67412b05935dc7712c432"
census_api_key(my_census_api_key)
my_states<- c("06") # CA
my_counties <- c("001") # Alameda County
cenvar_table <-load_variables(year=2016, dataset = "acs5", cache=T)
View(cenvar_table)
pop_total <- "B01001_001E"    # Total population
pop_under18 <- "B09001_001E"  # POPULATION UNDER 18 YEARS BY AGE
pop_acs5_2016 <-get_acs(geography = "tract",
variables = c(pop_total,pop_under18),
year=2016, survey="acs5",
state = my_states, county = my_counties,
geometry = F)
View(pop_acs5_2016)
library(tidyr)
library(dplyr)
library(tidyr)
library(dplyr)
# Select the columnbs of interest
# and put `totpop` and `under18` in their own columns
pop2 <- pop_acs5_2016 %>%
select("GEOID","variable","estimate") %>%
spread(key=variable, value=estimate)
# Rename columns
colnames(pop2)<-c("GEOID10","totpop","under18")
head(pop2)
pop2$pct_under18 <- round((pop2$under18 / pop2$totpop) * 100, 1)
head(pop2)
address_data2 <- merge(address_data, pop2, by="GEOID10", all.x=T)
View(address_data2)
View(tracts2010@data)
tracts2010 <- merge(tracts2010, pop2, by="GEOID10")
View(tracts2010@data)
quantColors <- colorQuantile("Reds", tracts2010$pct_under18, n=5)
point_map <- leaflet() %>%
addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor= ~quantColors(pct_under18),
fillOpacity = 0.75,
popup = paste0("<b>Percent under 18:</b> ", tracts2010$pct_under18, "%")) %>%
addMarkers(data=address_data, lat=~glat, lng=~glon,
popup=(paste0(address_data$name, "</br>",
address_data$full_address)
)
)
point_map
library(htmlwidgets)
saveWidget(point_map, file="pointmap.html")
# Chunk 1
library(crosstalk)
library(tidyverse)
library(leaflet)
library(rgdal)
library(sp)
#library(DT)
address_data2 <- read.csv("output/address_data_geocoded2.csv", stringsAsFactors = F)
tracts2010 <- readOGR(dsn="output",layer="tracts2010")
# Chunk 2
shared_df <- SharedData$new(address_data2, ~name, group = "Choose Store")
quantColors <- colorQuantile("YlOrRd", tracts2010$pct_n18, n=5)
map <- leaflet(shared_df, width = "100%", height = 600) %>% addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor=~quantColors(pct_n18),
fillOpacity = 0.65,
popup = paste0(tracts2010$pct_n18, "% under 18"),
group="Percent Under 18") %>%
addMarkers(group="Liquor Stores", popup=shared_df$pct_under18) %>%
addLayersControl(
overlayGroups = c("Liquor Stores","Percent Under 18"),
options = layersControlOptions(collapsed = FALSE)
)
# Chunk 3
bscols( widths = c(9,3),
map,
list(
filter_select("name", "Store:", shared_df, ~name),
# Create a filter input
filter_slider("pct_under18", "Percent under 18", shared_df, column=~pct_under18, step=0.1, width=250)
)
)
map <- leaflet(shared_df, width = "100%", height = 600) %>% addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor=~quantColors(pct_n18),
fillOpacity = 0.65,
popup = paste0(tracts2010$pct_n18, "% under 18"),
group="Percent Under 18") %>%
addMarkers(group="Liquor Stores", popup=shared_df$pct_under18) %>%
addLayersControl(
overlayGroups = c("Liquor Stores","Percent Under 18"),
options = layersControlOptions(collapsed = FALSE)
) %>% hideGroup("Liquor Stores")
point_map
point_map <- leaflet() %>%
addTiles() %>%
addPolygons(data=tracts2010,
color="white",
weight=1,
opacity=0.5,
fillColor= ~quantColors(pct_under18),
fillOpacity = 0.75,
popup = paste0("<b>Percent under 18:</b> ", tracts2010$pct_under18, "%")) %>%
addMarkers(data=address_data, lat=~glat, lng=~glon,
popup=(paste0(address_data$name, "</br>",
address_data$full_address)
)
) %>% hideGroup("Liquor Stores")
point_map
?tmap
library(tmap)
?addPolygons
?layersControlOptions
